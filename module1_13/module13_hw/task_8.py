print('Задача 8. Яйца')

# В рамках программы колонизации Марса
# компания «Спейс Инжиниринг» вывела особую породу черепах,
# которые, по задумке, должны размножаться, откладывая яйца в марсианском грунте.
# Откладывать яйца слишком близко к поверхности опасно из-за радиации,
# а слишком глубоко — из-за давления грунта и недостатка кислорода.
# Вообще, факторов очень много,
# но специалисты проделали большую работу и предположили,
# что уровень опасности для черепашьих яиц рассчитывается по формуле
# D = x**3 − 3x**2 − 12x + 10,
# где x — глубина кладки в метрах,
# а D — уровень опасности в условных единицах.
# 
# Для тестирования гипотезы
# нужно взять пробу грунта на безопасной, согласно формуле, глубине.
# 
# Напишите программу при котором уровень опасности как можно более близок к нулю.
# На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля,
# а программа должна рассчитать приблизительное значение "х",
# удовлетворяющее этому отклонению.
# 
# Известно, что глубина точно больше нуля и меньше четырёх метров.
# 
# Обеспечьте контроль ввода.
# 
# Пример:
# Введите максимально допустимый уровень опасности: 0.01
# 
# Приблизительная глубина безопасной кладки: 0.732421875 м

precession = float(input('Введите допустимый уровень опасности: '))
start = 0  # Нижняя грация
finish = 4  # Верхняя граница
x = (finish + start) / 2 # среднее
d = x**3 - 3 * x**2 - 12 * x + 10
#print(x, "do cikla")
while precession < 0:
  precession = float(input('Введите допустимый уровень опасности > 0: '))
#print(d, "Formula")
while abs(d) > precession :
  if d > 0:
    start = x
  else:
    finish = x
  x = (finish + start) / 2
  #print(x, "pocle cikla")
  d = x**3 - 3 * x**2 - 12 * x + 10
 # print(d)
print("Приблизительная глубина безопасной кладки:", x)

"""
precesion = 0.01
x = 0
print(x)
d = x**3 - 3*x**2 - 12*x + 10

while abs(d) > precesion :
  x += 1e-15
  if x == 4:
    break
  d = x**3 - 3*x**2 - 12*x + 10
  print(d)
print(d, "result")


Порядок действий примерно такой:
1 - Получили значение
2 - Считаем среднее -  (4 + 0) / 2. 
3 - Считаем уровень опасности  среднее ** 3 - 3 * среднее  ** 2 - 12 * среднее  + 10
4 - В цикле while пока уровень опасности больше полученного числа делаем расчеты, изменяя при этом диапазоны для деления.

start = 1  # Нижняя грация
finish = 101  # Верхняя граница
count = 1
while True:
    n = (start + finish) // 2  # Выбраем золотую середину
    print('Загаданое число равно, меньше или больше', n)
    answer = int(input('1 - равно, 2 - меньше, 3 - больше '))
    if answer == 1:
        print('Я угадал! Ура! с ', count, 'попытки')
        break
    elif answer == 2:
        # Если число меньше, то меняем вернюю границу для деления
        finish = n
    elif answer == 3:
        # В другом случае наооборот
        start = n


precesion = 0.01
x = 1e-15
print(x)
d = x**3 - 3*x**2 - 12*x + 10

while abs(d) > precesion :
  x += 1e-15
  if x == 4:
    break
  d = x**3 - 3*x**2 - 12*x + 10
  print(d)
print(d, "result")



precession = 0.01
x = (4 + 0) / 2
d = x**3 - 3*x**2 - 12*x + 10
while abs(d) > precession :
  x /= 2
  d = (x**3) - (3*x**2) - (12*x + 10)
  print(d)
print(d, "result")
"""